ldr builtins.len 1
ldr builtins.len !
PyExZ3 (Python Exploration with Z3)
Exploring andor.andor
ldr self :  {'app': <module 'andor' from '/mnt/hgfs/PyExZ3P/test/andor.py'>, '_fileName': 'andor', '_entryPoint': 'andor'}
ldr argspec :  ArgSpec(args=['x', 'y'], varargs=None, keywords=None, defaults=None)
ldr func.__dict__ :  {}
ldr _initializeArgumentSymbolic ok
ldr _initializeArgumentSymbolic ok
ldr inv :  {'arg_constructor': {'y': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff505ae1048>, 'x': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff50af9f048>}, 'initial_value': {'y': 0, 'x': 0}, 'function': <bound method Loader._execute of <symbolic.loader.Loader object at 0x7ff505ada550>>, 'reset': <bound method Loader._resetCallback of <symbolic.loader.Loader object at 0x7ff505ada550>>}
epl funcinv :  {'arg_constructor': {'y': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff505ae1048>, 'x': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff50af9f048>}, 'initial_value': {'y': 0, 'x': 0}, 'function': <bound method Loader._execute of <symbolic.loader.Loader object at 0x7ff505ada550>>, 'reset': <bound method Loader._resetCallback of <symbolic.loader.Loader object at 0x7ff505ada550>>}
epl before funcinv :  {'arg_constructor': {'y': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff505ae1048>, 'x': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff50af9f048>}, 'initial_value': {'y': 0, 'x': 0}, 'function': <bound method Loader._execute of <symbolic.loader.Loader object at 0x7ff505ada550>>, 'reset': <bound method Loader._resetCallback of <symbolic.loader.Loader object at 0x7ff505ada550>>}
epl n :  y
[1;33;40m int [0m
[1;33;40m int [0m
[1;33;40m type [0m
epl self.symbolic_inputs[n] :  0
epl n :  x
[1;33;40m int [0m
[1;33;40m int [0m
[1;33;40m type [0m
epl self.symbolic_inputs[n] :  0
epl after funcinv :  {'arg_constructor': {'y': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff505ae1048>, 'x': <function Loader._initializeArgumentSymbolic.<locals>.<lambda> at 0x7ff50af9f048>}, 'initial_value': {'y': 0, 'x': 0}, 'function': <bound method Loader._execute of <symbolic.loader.Loader object at 0x7ff505ada550>>, 'reset': <bound method Loader._resetCallback of <symbolic.loader.Loader object at 0x7ff505ada550>>}
epl self.path :  {'current_constraint': None (processed: False), 'expected_path': None, 'constraints': {}, 'add': <function ExplorationEngine.__init__.<locals>.<lambda> at 0x7ff505ae10d0>, 'root_constraint': None (processed: False)}
epl explore() start !
_oneExecution start !
[1;31;40m [('y', 0), ('x', 0)] [0m
epl oneexecution self.path :  {'current_constraint': None (processed: False), 'expected_path': None, 'constraints': {}, 'add': <function ExplorationEngine.__init__.<locals>.<lambda> at 0x7ff505ae10d0>, 'root_constraint': None (processed: False)}
epl oneexecution self.symbolic_inputs :  {'y': 0, 'x': 0}
inv self.function :  {}
inv args :  {'y': 0, 'x': 0}
inv callfunction end1
ldr self._entryPoint andor
ldr args {'y': 0, 'x': 0}
ldr self.app.__dict__[self.entryPoint] <function andor at 0x7ff505ae11e0>
ptc whichbranch start
ptc branch :  False
ptc symbolic_type :  0
ptc p :  {'symtype': 0, 'result': False}
ptc p.negate() :  {'symtype': 0, 'result': True}
ptc p.negate().negate() :  x#0 (False)
ptc c :  None
ptc cneg :  None
ptc c is None
New constraint: x#0 (False)  (processed: False, path_len: 1)
epl cjh constraint :  x#0 (False)  (processed: False, path_len: 1)
ptc whichbranch start
ptc branch :  False
ptc symbolic_type :  0
ptc p :  {'symtype': 0, 'result': False}
ptc p.negate() :  {'symtype': 0, 'result': True}
ptc p.negate().negate() :  y#0 (False)
ptc c :  None
ptc cneg :  None
ptc c is None
New constraint: y#0 (False)  (processed: False, path_len: 2)
epl cjh constraint :  y#0 (False)  (processed: False, path_len: 2)
ldr tmp :  2
inv tmp :  2
[1;31;40m 2 [0m
_oneExecution end !
epl selected :  x#0 (False)  (processed: False, path_len: 1)
epl CJH2
epl Selected constraint x#0 (False)  (processed: False, path_len: 1)
epl cjh2
cst parent :  None  (processed: False, path_len: 0)
cst asserts :  []
cst predicate :  x#0 (False)
z3w findCounterexample start
[1;32;40m z3w findmodel start [0m
z3w use_lia True
z3w z3_expr :  {'z3_vars': {}}
z3w asserts :  []
z3w query :  x#0 (False)
exp pred :  {'symtype': 0, 'result': False}
exp env :  None
exp init expr :  0
exp init sym_expr :  x
exp final sym_expr :  Not(0 != x)
exp predtoz3 solver :  []
exp toz3 solver :  [Not(Not(0 != x))]
z3w res :  sat
[1;31;40m z3w findmodel2 start [0m
[1;31;40m Z3BITVECTOR [0m
zw3 z3bitvector z3_expr :  {'N': 32, 'z3_vars': {}}
exp pred :  {'symtype': 0, 'result': False}
exp env :  None
exp init expr :  0
exp init sym_expr :  x
exp final sym_expr :  Not(0 != x)
exp predtoz3 solver :  []
exp toz3 solver :  [Not(Not(0 != x))]
zw3 toz3 asserts query :  [] x#0 (False)
zw3 toz3 z3_expr :  {'N': 32, 'z3_vars': {'x': x}}
z3w res :  sat
[1;31;40m z3w z3 getModel start !!!!!!!!!!!!!!!!!!!! [0m
{'bound': 15, 'solver': [Not(Not(0 != x)), And(15 >= x, 4294967280 <= x)], 'use_lia': True, 'z3_expr': <symbolic.z3_expr.bitvector.Z3BitVector object at 0x7ff505ae6780>, 'query': x#0 (False), 'asserts': [], 'N': 32}
{'N': 32, 'z3_vars': {'x': x}}
z3w model :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'model': <Model object at 0x7ff5095bb2f0>}
z3w model.model {}
z3w model.ctx {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w model.ctx.ctx {}
z3w model.ctx.eh {}
z3w name :  x
z3w self.z3_expr.z3_vars[name] :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'ast': <Ast object at 0x7ff505ae12f0>}
z3w self.z3_expr.z3_vars[name] :  {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w ce :  2
z3w res :  {'x': 2}
[1;31;40m z3w z3 getModel end !!!!!!!!!!!!!!!!!!!! [0m
z3w model :  {'x': 2}
z3w flag not mismatch
exp pred :  {'symtype': 0, 'result': False}
exp env :  {'x': 2}
exp init expr :  0
exp init sym_expr :  2
exp final sym_expr :  False
exp predtoz3 solver :  [Not(Not(0 != x))]
z3w tmp :  False
z3w mismatch False
[1;31;40m z3w findmodel2 end1 [0m
z3w ret,mismatch :  (sat, False)
[1;31;40m z3w z3 getModel start !!!!!!!!!!!!!!!!!!!! [0m
{'bound': 15, 'solver': [Not(Not(0 != x))], 'use_lia': True, 'z3_expr': <symbolic.z3_expr.bitvector.Z3BitVector object at 0x7ff505ae6780>, 'query': x#0 (False), 'asserts': [], 'N': 32}
{'N': 32, 'z3_vars': {'x': x}}
z3w model :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'model': <Model object at 0x7ff5095bb2f0>}
z3w model.model {}
z3w model.ctx {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w model.ctx.ctx {}
z3w model.ctx.eh {}
z3w name :  x
z3w self.z3_expr.z3_vars[name] :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'ast': <Ast object at 0x7ff505ae12f0>}
z3w self.z3_expr.z3_vars[name] :  {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w ce :  2
z3w res :  {'x': 2}
[1;31;40m z3w z3 getModel end !!!!!!!!!!!!!!!!!!!! [0m
z3w res1 :  {'x': 2}
[1;32;40m z3w findmodel end [0m
z3w flag 11111111111111111111111
z3w Query -- x#0 (False)
z3w Asserts -- []
z3w Cone -- []
z3w Result -- {'x': 2}
z3w res :  {'x': 2}
z3w findCounterexample end
epl asserts :  []
epl query :  x#0 (False)
[1;33;40m int [0m
[1;33;40m int [0m
[1;33;40m type [0m
_oneExecution start !
[1;31;40m [('y', 0), ('x', 2)] [0m
epl oneexecution self.path :  {'current_constraint': None (processed: False), 'expected_path': [x#0 (False)], 'constraints': {}, 'add': <function ExplorationEngine.__init__.<locals>.<lambda> at 0x7ff505ae10d0>, 'root_constraint': None (processed: False)}
epl oneexecution self.symbolic_inputs :  {'y': 0, 'x': 2}
inv self.function :  {}
inv args :  {'y': 0, 'x': 2}
inv callfunction end1
ldr self._entryPoint andor
ldr args {'y': 0, 'x': 2}
ldr self.app.__dict__[self.entryPoint] <function andor at 0x7ff505ae1620>
ptc whichbranch start
ptc branch :  True
ptc symbolic_type :  2
ptc p :  {'symtype': 2, 'result': True}
ptc p.negate() :  {'symtype': 2, 'result': False}
ptc p.negate().negate() :  x#2 (True)
ptc c :  None
ptc cneg :  x#0 (False)  (processed: True, path_len: 1)
ptc c is None
New constraint: x#2 (True)  (processed: False, path_len: 1)
epl cjh constraint :  x#2 (True)  (processed: False, path_len: 1)
ldr tmp :  1
inv tmp :  1
[1;31;40m 1 [0m
_oneExecution end !
iterations :  2
epl selected :  y#0 (False)  (processed: False, path_len: 2)
epl CJH2
epl Selected constraint y#0 (False)  (processed: False, path_len: 2)
epl cjh2
cst parent :  x#0 (False)  (processed: True, path_len: 1)
cst asserts :  [x#0 (False)]
cst predicate :  y#0 (False)
z3w findCounterexample start
[1;32;40m z3w findmodel start [0m
z3w use_lia True
z3w z3_expr :  {'z3_vars': {}}
z3w asserts :  []
z3w query :  y#0 (False)
exp pred :  {'symtype': 0, 'result': False}
exp env :  None
exp init expr :  0
exp init sym_expr :  y
exp final sym_expr :  Not(0 != y)
exp predtoz3 solver :  []
exp toz3 solver :  [Not(Not(0 != y))]
z3w res :  sat
[1;31;40m z3w findmodel2 start [0m
[1;31;40m Z3BITVECTOR [0m
zw3 z3bitvector z3_expr :  {'N': 32, 'z3_vars': {}}
exp pred :  {'symtype': 0, 'result': False}
exp env :  None
exp init expr :  0
exp init sym_expr :  y
exp final sym_expr :  Not(0 != y)
exp predtoz3 solver :  []
exp toz3 solver :  [Not(Not(0 != y))]
zw3 toz3 asserts query :  [] y#0 (False)
zw3 toz3 z3_expr :  {'N': 32, 'z3_vars': {'y': y}}
z3w res :  sat
[1;31;40m z3w z3 getModel start !!!!!!!!!!!!!!!!!!!! [0m
{'bound': 15, 'solver': [Not(Not(0 != y)), And(15 >= y, 4294967280 <= y)], 'use_lia': True, 'z3_expr': <symbolic.z3_expr.bitvector.Z3BitVector object at 0x7ff505ae6128>, 'query': y#0 (False), 'asserts': [], 'N': 32}
{'N': 32, 'z3_vars': {'y': y}}
z3w model :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'model': <Model object at 0x7ff505ae1730>}
z3w model.model {}
z3w model.ctx {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w model.ctx.ctx {}
z3w model.ctx.eh {}
z3w name :  y
z3w self.z3_expr.z3_vars[name] :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'ast': <Ast object at 0x7ff505ae12f0>}
z3w self.z3_expr.z3_vars[name] :  {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w ce :  2
z3w res :  {'y': 2}
[1;31;40m z3w z3 getModel end !!!!!!!!!!!!!!!!!!!! [0m
z3w model :  {'y': 2}
z3w flag not mismatch
exp pred :  {'symtype': 0, 'result': False}
exp env :  {'y': 2}
exp init expr :  0
exp init sym_expr :  2
exp final sym_expr :  False
exp predtoz3 solver :  [Not(Not(0 != y))]
z3w tmp :  False
z3w mismatch False
[1;31;40m z3w findmodel2 end1 [0m
z3w ret,mismatch :  (sat, False)
[1;31;40m z3w z3 getModel start !!!!!!!!!!!!!!!!!!!! [0m
{'bound': 15, 'solver': [Not(Not(0 != y))], 'use_lia': True, 'z3_expr': <symbolic.z3_expr.bitvector.Z3BitVector object at 0x7ff505ae6128>, 'query': y#0 (False), 'asserts': [], 'N': 32}
{'N': 32, 'z3_vars': {'y': y}}
z3w model :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'model': <Model object at 0x7ff505ae1158>}
z3w model.model {}
z3w model.ctx {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w model.ctx.ctx {}
z3w model.ctx.eh {}
z3w name :  y
z3w self.z3_expr.z3_vars[name] :  {'ctx': <z3.z3.Context object at 0x7ff505ae61d0>, 'ast': <Ast object at 0x7ff505ae12f0>}
z3w self.z3_expr.z3_vars[name] :  {'ctx': <ContextObj object at 0x7ff505ae1268>, 'eh': <CFunctionType object at 0x7ff505aea110>}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w self.z3_expr.z3_vars[name] :  {}
z3w ce :  2
z3w res :  {'y': 2}
[1;31;40m z3w z3 getModel end !!!!!!!!!!!!!!!!!!!! [0m
z3w res1 :  {'y': 2}
[1;32;40m z3w findmodel end [0m
z3w flag 11111111111111111111111
z3w Query -- y#0 (False)
z3w Asserts -- [x#0 (False)]
z3w Cone -- []
z3w Result -- {'y': 2}
z3w res :  {'y': 2}
z3w findCounterexample end
epl asserts :  [x#0 (False)]
epl query :  y#0 (False)
[1;33;40m int [0m
[1;33;40m int [0m
[1;33;40m type [0m
_oneExecution start !
[1;31;40m [('y', 2), ('x', 0)] [0m
epl oneexecution self.path :  {'current_constraint': None (processed: False), 'expected_path': [y#0 (False), x#0 (False)], 'constraints': {}, 'add': <function ExplorationEngine.__init__.<locals>.<lambda> at 0x7ff505ae10d0>, 'root_constraint': None (processed: False)}
epl oneexecution self.symbolic_inputs :  {'y': 2, 'x': 0}
inv self.function :  {}
inv args :  {'y': 2, 'x': 0}
inv callfunction end1
ldr self._entryPoint andor
ldr args {'y': 2, 'x': 0}
ldr self.app.__dict__[self.entryPoint] <function andor at 0x7ff505ae1378>
ptc whichbranch start
ptc branch :  False
ptc symbolic_type :  0
ptc p :  {'symtype': 0, 'result': False}
ptc p.negate() :  {'symtype': 0, 'result': True}
ptc p.negate().negate() :  x#0 (False)
ptc c :  x#0 (False)  (processed: True, path_len: 1)
ptc cneg :  x#2 (True)  (processed: True, path_len: 1)
ptc whichbranch start
ptc branch :  True
ptc symbolic_type :  2
ptc p :  {'symtype': 2, 'result': True}
ptc p.negate() :  {'symtype': 2, 'result': False}
ptc p.negate().negate() :  y#2 (True)
ptc c :  None
ptc cneg :  y#0 (False)  (processed: True, path_len: 2)
ptc c is None
New constraint: y#2 (True)  (processed: False, path_len: 2)
epl cjh constraint :  y#2 (True)  (processed: False, path_len: 2)
ldr tmp :  1
inv tmp :  1
[1;31;40m 1 [0m
_oneExecution end !
iterations :  3
epl selected :  x#2 (True)  (processed: True, path_len: 1)
epl selected :  y#2 (True)  (processed: True, path_len: 2)
epl explore() end !
py3 CJH1
[[('y', 0), ('x', 0)], [('y', 0), ('x', 2)], [('y', 2), ('x', 0)]]
[2, 1, 1]
{'current_constraint': y#2 (True) (processed: True)
  path: x#0 (False) (processed: True)
  path: None (processed: False), 'expected_path': [], 'constraints': {}, 'add': <function ExplorationEngine.__init__.<locals>.<lambda> at 0x7ff505ae10d0>, 'root_constraint': None (processed: False)}
py3 CJH11
andor.py contains no expected_result function
